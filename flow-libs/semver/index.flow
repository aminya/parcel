/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.14.1
 */

import semverParse from "./functions/parse";
import semverValid from "./functions/valid";
import semverClean from "./functions/clean";
import semverInc from "./functions/inc";
import semverDiff from "./functions/diff";
import semverMajor from "./functions/major";
import semverMinor from "./functions/minor";
import semverPatch from "./functions/patch";
import semverPrerelease from "./functions/prerelease";
import semverCompare from "./functions/compare";
import semverRcompare from "./functions/rcompare";
import semverCompareLoose from "./functions/compare-loose";
import semverCompareBuild from "./functions/compare-build";
import semverSort from "./functions/sort";
import semverRsort from "./functions/rsort";
declare export {
  semverParse as parse,
  semverValid as valid,
  semverClean as clean,
  semverInc as inc,
  semverDiff as diff,
  semverMajor as major,
  semverMinor as minor,
  semverPatch as patch,
  semverPrerelease as prerelease,
  semverCompare as compare,
  semverRcompare as rcompare,
  semverCompareLoose as compareLoose,
  semverCompareBuild as compareBuild,
  semverSort as sort,
  semverRsort as rsort,
};
import semverGt from "./functions/gt";
import semverLt from "./functions/lt";
import semverEq from "./functions/eq";
import semverNeq from "./functions/neq";
import semverGte from "./functions/gte";
import semverLte from "./functions/lte";
import semverCmp from "./functions/cmp";
import semverCoerce from "./functions/coerce";
declare export {
  semverGt as gt,
  semverLt as lt,
  semverEq as eq,
  semverNeq as neq,
  semverGte as gte,
  semverLte as lte,
  semverCmp as cmp,
  semverCoerce as coerce,
};
import semverSatisfies from "./functions/satisfies";
import semverMaxSatisfying from "./ranges/max-satisfying";
import semverMinSatisfying from "./ranges/min-satisfying";
import semverToComparators from "./ranges/to-comparators";
import semverMinVersion from "./ranges/min-version";
import semverValidRange from "./ranges/valid";
import semverOutside from "./ranges/outside";
import semverGtr from "./ranges/gtr";
import semverLtr from "./ranges/ltr";
import semverIntersects from "./ranges/intersects";
import simplify from "./ranges/simplify";
import rangeSubset from "./ranges/subset";
declare export {
  semverSatisfies as satisfies,
  semverMaxSatisfying as maxSatisfying,
  semverMinSatisfying as minSatisfying,
  semverToComparators as toComparators,
  semverMinVersion as minVersion,
  semverValidRange as validRange,
  semverOutside as outside,
  semverGtr as gtr,
  semverLtr as ltr,
  semverIntersects as intersects,
  simplify as simplifyRange,
  rangeSubset as subset,
};
import SemVer from "./classes/semver";
import Range from "./classes/range";
import Comparator from "./classes/comparator";
declare export { SemVer, Range, Comparator };
import identifiers from "./internals/identifiers";
declare export var SEMVER_SPEC_VERSION: "2.0.0";
export type ReleaseType =
  | "major"
  | "premajor"
  | "minor"
  | "preminor"
  | "patch"
  | "prepatch"
  | "prerelease";
export interface Options {
  loose?: boolean;
  includePrerelease?: boolean;
}
export type CoerceOptions = {
  /**
   * Used by `coerce()` to coerce from right to left.
   * @default false
   * @example coerce('1.2.3.4', { rtl: true });
   * // => SemVer { version: '2.3.4', ... }
   * @since 6.2.0
   */
  rtl?: boolean,
  ...
} & Options;
export type Operator =
  | "==="
  | "!=="
  | ""
  | "="
  | "=="
  | "!="
  | ">"
  | ">="
  | "<"
  | "<=";
